// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PivotPointFilter.proto

package filters.generated;

public final class PivotPointFilter {
  private PivotPointFilter() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PivotsFilter2OrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string spoint = 1;
    /**
     * <code>required string spoint = 1;</code>
     */
    boolean hasSpoint();
    /**
     * <code>required string spoint = 1;</code>
     */
    java.lang.String getSpoint();
    /**
     * <code>required string spoint = 1;</code>
     */
    com.google.protobuf.ByteString
        getSpointBytes();

    // required string epoint = 2;
    /**
     * <code>required string epoint = 2;</code>
     */
    boolean hasEpoint();
    /**
     * <code>required string epoint = 2;</code>
     */
    java.lang.String getEpoint();
    /**
     * <code>required string epoint = 2;</code>
     */
    com.google.protobuf.ByteString
        getEpointBytes();

    // required double threshold = 3;
    /**
     * <code>required double threshold = 3;</code>
     */
    boolean hasThreshold();
    /**
     * <code>required double threshold = 3;</code>
     */
    double getThreshold();

    // required string traj = 4;
    /**
     * <code>required string traj = 4;</code>
     */
    boolean hasTraj();
    /**
     * <code>required string traj = 4;</code>
     */
    java.lang.String getTraj();
    /**
     * <code>required string traj = 4;</code>
     */
    com.google.protobuf.ByteString
        getTrajBytes();

    // repeated int32 pivots = 5;
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    java.util.List<java.lang.Integer> getPivotsList();
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    int getPivotsCount();
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    int getPivots(int index);

    // optional string mbrs = 6;
    /**
     * <code>optional string mbrs = 6;</code>
     */
    boolean hasMbrs();
    /**
     * <code>optional string mbrs = 6;</code>
     */
    java.lang.String getMbrs();
    /**
     * <code>optional string mbrs = 6;</code>
     */
    com.google.protobuf.ByteString
        getMbrsBytes();

    // optional int32 func = 7;
    /**
     * <code>optional int32 func = 7;</code>
     */
    boolean hasFunc();
    /**
     * <code>optional int32 func = 7;</code>
     */
    int getFunc();

    // required bool returnSim = 8;
    /**
     * <code>required bool returnSim = 8;</code>
     */
    boolean hasReturnSim();
    /**
     * <code>required bool returnSim = 8;</code>
     */
    boolean getReturnSim();
  }
  /**
   * Protobuf type {@code PivotsFilter2}
   */
  public static final class PivotsFilter2 extends
      com.google.protobuf.GeneratedMessage
      implements PivotsFilter2OrBuilder {
    // Use PivotsFilter2.newBuilder() to construct.
    private PivotsFilter2(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PivotsFilter2(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PivotsFilter2 defaultInstance;
    public static PivotsFilter2 getDefaultInstance() {
      return defaultInstance;
    }

    public PivotsFilter2 getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PivotsFilter2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              spoint_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              epoint_ = input.readBytes();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              threshold_ = input.readDouble();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              traj_ = input.readBytes();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                pivots_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              pivots_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                pivots_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                pivots_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              mbrs_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              func_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              returnSim_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          pivots_ = java.util.Collections.unmodifiableList(pivots_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return filters.generated.PivotPointFilter.internal_static_PivotsFilter2_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return filters.generated.PivotPointFilter.internal_static_PivotsFilter2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              filters.generated.PivotPointFilter.PivotsFilter2.class, filters.generated.PivotPointFilter.PivotsFilter2.Builder.class);
    }

    public static com.google.protobuf.Parser<PivotsFilter2> PARSER =
        new com.google.protobuf.AbstractParser<PivotsFilter2>() {
      public PivotsFilter2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PivotsFilter2(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PivotsFilter2> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string spoint = 1;
    public static final int SPOINT_FIELD_NUMBER = 1;
    private java.lang.Object spoint_;
    /**
     * <code>required string spoint = 1;</code>
     */
    public boolean hasSpoint() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string spoint = 1;</code>
     */
    public java.lang.String getSpoint() {
      java.lang.Object ref = spoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          spoint_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string spoint = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSpointBytes() {
      java.lang.Object ref = spoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        spoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string epoint = 2;
    public static final int EPOINT_FIELD_NUMBER = 2;
    private java.lang.Object epoint_;
    /**
     * <code>required string epoint = 2;</code>
     */
    public boolean hasEpoint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string epoint = 2;</code>
     */
    public java.lang.String getEpoint() {
      java.lang.Object ref = epoint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          epoint_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string epoint = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEpointBytes() {
      java.lang.Object ref = epoint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        epoint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required double threshold = 3;
    public static final int THRESHOLD_FIELD_NUMBER = 3;
    private double threshold_;
    /**
     * <code>required double threshold = 3;</code>
     */
    public boolean hasThreshold() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double threshold = 3;</code>
     */
    public double getThreshold() {
      return threshold_;
    }

    // required string traj = 4;
    public static final int TRAJ_FIELD_NUMBER = 4;
    private java.lang.Object traj_;
    /**
     * <code>required string traj = 4;</code>
     */
    public boolean hasTraj() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string traj = 4;</code>
     */
    public java.lang.String getTraj() {
      java.lang.Object ref = traj_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          traj_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string traj = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTrajBytes() {
      java.lang.Object ref = traj_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        traj_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 pivots = 5;
    public static final int PIVOTS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> pivots_;
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getPivotsList() {
      return pivots_;
    }
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    public int getPivotsCount() {
      return pivots_.size();
    }
    /**
     * <code>repeated int32 pivots = 5;</code>
     */
    public int getPivots(int index) {
      return pivots_.get(index);
    }

    // optional string mbrs = 6;
    public static final int MBRS_FIELD_NUMBER = 6;
    private java.lang.Object mbrs_;
    /**
     * <code>optional string mbrs = 6;</code>
     */
    public boolean hasMbrs() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string mbrs = 6;</code>
     */
    public java.lang.String getMbrs() {
      java.lang.Object ref = mbrs_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mbrs_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mbrs = 6;</code>
     */
    public com.google.protobuf.ByteString
        getMbrsBytes() {
      java.lang.Object ref = mbrs_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mbrs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 func = 7;
    public static final int FUNC_FIELD_NUMBER = 7;
    private int func_;
    /**
     * <code>optional int32 func = 7;</code>
     */
    public boolean hasFunc() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 func = 7;</code>
     */
    public int getFunc() {
      return func_;
    }

    // required bool returnSim = 8;
    public static final int RETURNSIM_FIELD_NUMBER = 8;
    private boolean returnSim_;
    /**
     * <code>required bool returnSim = 8;</code>
     */
    public boolean hasReturnSim() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool returnSim = 8;</code>
     */
    public boolean getReturnSim() {
      return returnSim_;
    }

    private void initFields() {
      spoint_ = "";
      epoint_ = "";
      threshold_ = 0D;
      traj_ = "";
      pivots_ = java.util.Collections.emptyList();
      mbrs_ = "";
      func_ = 0;
      returnSim_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSpoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEpoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThreshold()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTraj()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReturnSim()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSpointBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEpointBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, threshold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTrajBytes());
      }
      for (int i = 0; i < pivots_.size(); i++) {
        output.writeInt32(5, pivots_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getMbrsBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, func_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, returnSim_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSpointBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEpointBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, threshold_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTrajBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pivots_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pivots_.get(i));
        }
        size += dataSize;
        size += 1 * getPivotsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMbrsBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, func_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, returnSim_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof filters.generated.PivotPointFilter.PivotsFilter2)) {
        return super.equals(obj);
      }
      filters.generated.PivotPointFilter.PivotsFilter2 other = (filters.generated.PivotPointFilter.PivotsFilter2) obj;

      boolean result = true;
      result = result && (hasSpoint() == other.hasSpoint());
      if (hasSpoint()) {
        result = result && getSpoint()
            .equals(other.getSpoint());
      }
      result = result && (hasEpoint() == other.hasEpoint());
      if (hasEpoint()) {
        result = result && getEpoint()
            .equals(other.getEpoint());
      }
      result = result && (hasThreshold() == other.hasThreshold());
      if (hasThreshold()) {
        result = result && (Double.doubleToLongBits(getThreshold())    == Double.doubleToLongBits(other.getThreshold()));
      }
      result = result && (hasTraj() == other.hasTraj());
      if (hasTraj()) {
        result = result && getTraj()
            .equals(other.getTraj());
      }
      result = result && getPivotsList()
          .equals(other.getPivotsList());
      result = result && (hasMbrs() == other.hasMbrs());
      if (hasMbrs()) {
        result = result && getMbrs()
            .equals(other.getMbrs());
      }
      result = result && (hasFunc() == other.hasFunc());
      if (hasFunc()) {
        result = result && (getFunc()
            == other.getFunc());
      }
      result = result && (hasReturnSim() == other.hasReturnSim());
      if (hasReturnSim()) {
        result = result && (getReturnSim()
            == other.getReturnSim());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSpoint()) {
        hash = (37 * hash) + SPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getSpoint().hashCode();
      }
      if (hasEpoint()) {
        hash = (37 * hash) + EPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getEpoint().hashCode();
      }
      if (hasThreshold()) {
        hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(
            Double.doubleToLongBits(getThreshold()));
      }
      if (hasTraj()) {
        hash = (37 * hash) + TRAJ_FIELD_NUMBER;
        hash = (53 * hash) + getTraj().hashCode();
      }
      if (getPivotsCount() > 0) {
        hash = (37 * hash) + PIVOTS_FIELD_NUMBER;
        hash = (53 * hash) + getPivotsList().hashCode();
      }
      if (hasMbrs()) {
        hash = (37 * hash) + MBRS_FIELD_NUMBER;
        hash = (53 * hash) + getMbrs().hashCode();
      }
      if (hasFunc()) {
        hash = (37 * hash) + FUNC_FIELD_NUMBER;
        hash = (53 * hash) + getFunc();
      }
      if (hasReturnSim()) {
        hash = (37 * hash) + RETURNSIM_FIELD_NUMBER;
        hash = (53 * hash) + hashBoolean(getReturnSim());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static filters.generated.PivotPointFilter.PivotsFilter2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(filters.generated.PivotPointFilter.PivotsFilter2 prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PivotsFilter2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements filters.generated.PivotPointFilter.PivotsFilter2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return filters.generated.PivotPointFilter.internal_static_PivotsFilter2_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return filters.generated.PivotPointFilter.internal_static_PivotsFilter2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                filters.generated.PivotPointFilter.PivotsFilter2.class, filters.generated.PivotPointFilter.PivotsFilter2.Builder.class);
      }

      // Construct using filters.generated.PivotPointFilter.PivotsFilter2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        spoint_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        epoint_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        threshold_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        traj_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        pivots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        mbrs_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        func_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        returnSim_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return filters.generated.PivotPointFilter.internal_static_PivotsFilter2_descriptor;
      }

      public filters.generated.PivotPointFilter.PivotsFilter2 getDefaultInstanceForType() {
        return filters.generated.PivotPointFilter.PivotsFilter2.getDefaultInstance();
      }

      public filters.generated.PivotPointFilter.PivotsFilter2 build() {
        filters.generated.PivotPointFilter.PivotsFilter2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public filters.generated.PivotPointFilter.PivotsFilter2 buildPartial() {
        filters.generated.PivotPointFilter.PivotsFilter2 result = new filters.generated.PivotPointFilter.PivotsFilter2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.spoint_ = spoint_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.epoint_ = epoint_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.threshold_ = threshold_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.traj_ = traj_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          pivots_ = java.util.Collections.unmodifiableList(pivots_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.pivots_ = pivots_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mbrs_ = mbrs_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.func_ = func_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.returnSim_ = returnSim_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof filters.generated.PivotPointFilter.PivotsFilter2) {
          return mergeFrom((filters.generated.PivotPointFilter.PivotsFilter2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(filters.generated.PivotPointFilter.PivotsFilter2 other) {
        if (other == filters.generated.PivotPointFilter.PivotsFilter2.getDefaultInstance()) return this;
        if (other.hasSpoint()) {
          bitField0_ |= 0x00000001;
          spoint_ = other.spoint_;
          onChanged();
        }
        if (other.hasEpoint()) {
          bitField0_ |= 0x00000002;
          epoint_ = other.epoint_;
          onChanged();
        }
        if (other.hasThreshold()) {
          setThreshold(other.getThreshold());
        }
        if (other.hasTraj()) {
          bitField0_ |= 0x00000008;
          traj_ = other.traj_;
          onChanged();
        }
        if (!other.pivots_.isEmpty()) {
          if (pivots_.isEmpty()) {
            pivots_ = other.pivots_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensurePivotsIsMutable();
            pivots_.addAll(other.pivots_);
          }
          onChanged();
        }
        if (other.hasMbrs()) {
          bitField0_ |= 0x00000020;
          mbrs_ = other.mbrs_;
          onChanged();
        }
        if (other.hasFunc()) {
          setFunc(other.getFunc());
        }
        if (other.hasReturnSim()) {
          setReturnSim(other.getReturnSim());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSpoint()) {
          
          return false;
        }
        if (!hasEpoint()) {
          
          return false;
        }
        if (!hasThreshold()) {
          
          return false;
        }
        if (!hasTraj()) {
          
          return false;
        }
        if (!hasReturnSim()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        filters.generated.PivotPointFilter.PivotsFilter2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (filters.generated.PivotPointFilter.PivotsFilter2) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string spoint = 1;
      private java.lang.Object spoint_ = "";
      /**
       * <code>required string spoint = 1;</code>
       */
      public boolean hasSpoint() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string spoint = 1;</code>
       */
      public java.lang.String getSpoint() {
        java.lang.Object ref = spoint_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          spoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string spoint = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSpointBytes() {
        java.lang.Object ref = spoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          spoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string spoint = 1;</code>
       */
      public Builder setSpoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        spoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string spoint = 1;</code>
       */
      public Builder clearSpoint() {
        bitField0_ = (bitField0_ & ~0x00000001);
        spoint_ = getDefaultInstance().getSpoint();
        onChanged();
        return this;
      }
      /**
       * <code>required string spoint = 1;</code>
       */
      public Builder setSpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        spoint_ = value;
        onChanged();
        return this;
      }

      // required string epoint = 2;
      private java.lang.Object epoint_ = "";
      /**
       * <code>required string epoint = 2;</code>
       */
      public boolean hasEpoint() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string epoint = 2;</code>
       */
      public java.lang.String getEpoint() {
        java.lang.Object ref = epoint_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          epoint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string epoint = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEpointBytes() {
        java.lang.Object ref = epoint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          epoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string epoint = 2;</code>
       */
      public Builder setEpoint(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        epoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string epoint = 2;</code>
       */
      public Builder clearEpoint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        epoint_ = getDefaultInstance().getEpoint();
        onChanged();
        return this;
      }
      /**
       * <code>required string epoint = 2;</code>
       */
      public Builder setEpointBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        epoint_ = value;
        onChanged();
        return this;
      }

      // required double threshold = 3;
      private double threshold_ ;
      /**
       * <code>required double threshold = 3;</code>
       */
      public boolean hasThreshold() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double threshold = 3;</code>
       */
      public double getThreshold() {
        return threshold_;
      }
      /**
       * <code>required double threshold = 3;</code>
       */
      public Builder setThreshold(double value) {
        bitField0_ |= 0x00000004;
        threshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double threshold = 3;</code>
       */
      public Builder clearThreshold() {
        bitField0_ = (bitField0_ & ~0x00000004);
        threshold_ = 0D;
        onChanged();
        return this;
      }

      // required string traj = 4;
      private java.lang.Object traj_ = "";
      /**
       * <code>required string traj = 4;</code>
       */
      public boolean hasTraj() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string traj = 4;</code>
       */
      public java.lang.String getTraj() {
        java.lang.Object ref = traj_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          traj_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string traj = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTrajBytes() {
        java.lang.Object ref = traj_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          traj_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string traj = 4;</code>
       */
      public Builder setTraj(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        traj_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string traj = 4;</code>
       */
      public Builder clearTraj() {
        bitField0_ = (bitField0_ & ~0x00000008);
        traj_ = getDefaultInstance().getTraj();
        onChanged();
        return this;
      }
      /**
       * <code>required string traj = 4;</code>
       */
      public Builder setTrajBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        traj_ = value;
        onChanged();
        return this;
      }

      // repeated int32 pivots = 5;
      private java.util.List<java.lang.Integer> pivots_ = java.util.Collections.emptyList();
      private void ensurePivotsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          pivots_ = new java.util.ArrayList<java.lang.Integer>(pivots_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getPivotsList() {
        return java.util.Collections.unmodifiableList(pivots_);
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public int getPivotsCount() {
        return pivots_.size();
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public int getPivots(int index) {
        return pivots_.get(index);
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public Builder setPivots(
          int index, int value) {
        ensurePivotsIsMutable();
        pivots_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public Builder addPivots(int value) {
        ensurePivotsIsMutable();
        pivots_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public Builder addAllPivots(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePivotsIsMutable();
        super.addAll(values, pivots_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pivots = 5;</code>
       */
      public Builder clearPivots() {
        pivots_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional string mbrs = 6;
      private java.lang.Object mbrs_ = "";
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public boolean hasMbrs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public java.lang.String getMbrs() {
        java.lang.Object ref = mbrs_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mbrs_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public com.google.protobuf.ByteString
          getMbrsBytes() {
        java.lang.Object ref = mbrs_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mbrs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public Builder setMbrs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        mbrs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public Builder clearMbrs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mbrs_ = getDefaultInstance().getMbrs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mbrs = 6;</code>
       */
      public Builder setMbrsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        mbrs_ = value;
        onChanged();
        return this;
      }

      // optional int32 func = 7;
      private int func_ ;
      /**
       * <code>optional int32 func = 7;</code>
       */
      public boolean hasFunc() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 func = 7;</code>
       */
      public int getFunc() {
        return func_;
      }
      /**
       * <code>optional int32 func = 7;</code>
       */
      public Builder setFunc(int value) {
        bitField0_ |= 0x00000040;
        func_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 func = 7;</code>
       */
      public Builder clearFunc() {
        bitField0_ = (bitField0_ & ~0x00000040);
        func_ = 0;
        onChanged();
        return this;
      }

      // required bool returnSim = 8;
      private boolean returnSim_ ;
      /**
       * <code>required bool returnSim = 8;</code>
       */
      public boolean hasReturnSim() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool returnSim = 8;</code>
       */
      public boolean getReturnSim() {
        return returnSim_;
      }
      /**
       * <code>required bool returnSim = 8;</code>
       */
      public Builder setReturnSim(boolean value) {
        bitField0_ |= 0x00000080;
        returnSim_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool returnSim = 8;</code>
       */
      public Builder clearReturnSim() {
        bitField0_ = (bitField0_ & ~0x00000080);
        returnSim_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PivotsFilter2)
    }

    static {
      defaultInstance = new PivotsFilter2(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PivotsFilter2)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PivotsFilter2_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PivotsFilter2_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026PivotPointFilter.proto\"\217\001\n\rPivotsFilte" +
      "r2\022\016\n\006spoint\030\001 \002(\t\022\016\n\006epoint\030\002 \002(\t\022\021\n\tth" +
      "reshold\030\003 \002(\001\022\014\n\004traj\030\004 \002(\t\022\016\n\006pivots\030\005 " +
      "\003(\005\022\014\n\004mbrs\030\006 \001(\t\022\014\n\004func\030\007 \001(\005\022\021\n\tretur" +
      "nSim\030\010 \002(\010B-\n\021filters.generatedB\020PivotPo" +
      "intFilterH\001\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_PivotsFilter2_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_PivotsFilter2_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PivotsFilter2_descriptor,
              new java.lang.String[] { "Spoint", "Epoint", "Threshold", "Traj", "Pivots", "Mbrs", "Func", "ReturnSim", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
